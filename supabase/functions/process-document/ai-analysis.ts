
// AI analysis utilities

export interface DocumentAnalysis {
  suggestedName: string;
  summary: string;
  taxonomy: {
    category: string;
    subcategory: string;
    keywords: string[];
    documentType: string;
  };
  detectedLanguage?: string;
}

export async function generateDocumentAnalysis(
  text: string, 
  document: any, 
  openaiApiKey: string
): Promise<DocumentAnalysis> {
  console.log('ü§ñ Calling OpenAI for document analysis...');
  
  // R√©cup√©rer les mots-cl√©s existants du syst√®me pour √©viter les synonymes
  const existingKeywords = await getExistingKeywords();
  
  // D√©tecter si c'est un fichier Excel pour adapter le prompt
  const isExcelFile = document.content_type === 'application/vnd.ms-excel' || 
                     document.content_type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
  
  const response = await fetch('https://api.openai.com/v1/chat/completions', {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${openaiApiKey}`,
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      model: 'gpt-4o-mini',
      messages: [
        {
          role: 'system',
          content: `Tu es un expert en analyse de documents m√©dicaux et administratifs${isExcelFile ? ', avec une sp√©cialisation dans l\'analyse de donn√©es Excel et tableaux' : ''}. 

D√âTECTION DE LANGUE OBLIGATOIRE :
- Tu DOIS d'abord identifier la langue principale du document
- Si le document N'EST PAS en fran√ßais, tu DOIS :
  1. Inclure la langue d√©tect√©e dans le nom sugg√©r√© : "[LANGUE] - Nom du document"
  2. Mentionner la langue dans le r√©sum√© : "Document r√©dig√© en [langue]. [reste du r√©sum√©]"
- Langues possibles : fran√ßais, anglais, allemand, italien, espagnol, portugais, n√©erlandais, etc.

CAT√âGORIES OBLIGATOIRES - Tu DOIS choisir parmi ces cat√©gories uniquement :
- "Administratif" : Documents officiels, formulaires, autorisations, courriers administratifs${isExcelFile ? ', budgets, plannings, rapports de gestion, donn√©es administratives en tableau' : ''}
- "Marketing" : UNIQUEMENT contenu marketing sp√©cifique du cabinet du Dr Tabibian (contenu site web, publicit√©s r√©seaux sociaux, brochures promotionnelles du cabinet, mat√©riel publicitaire du cabinet)${isExcelFile ? ', donn√©es de campagnes marketing, analyses de performance marketing du cabinet' : ''}
- "Contrat" : Contrats, accords, conventions, documents juridiques${isExcelFile ? ', tableaux de tarifs, conditions contractuelles sous forme tabulaire' : ''}
- "Information m√©dicale" : Comptes-rendus m√©dicaux, prescriptions, r√©sultats d'examens, dossiers patients${isExcelFile ? ', donn√©es patients en tableau, statistiques m√©dicales, plannings de consultation' : ''}
- "Fiche Technique Materiel" : Sp√©cifications techniques, manuels d'utilisation, fiches produits${isExcelFile ? ', inventaires d\'√©quipements, tableaux de sp√©cifications techniques' : ''}
- "Contact" : Listes de contacts, annuaires, informations de contact${isExcelFile ? ', listes de contacts patients, annuaires de fournisseurs, r√©pertoires professionnels' : ''}

${isExcelFile ? `
ANALYSE SP√âCIALE POUR LES FICHIERS EXCEL :
- Identifie le type de donn√©es : listes de contacts, budgets, plannings, inventaires, statistiques
- D√©termine si c'est un tableau de suivi (patients, mat√©riel, contacts)
- Regarde les en-t√™tes de colonnes pour comprendre la structure
- Privil√©gie "Contact" pour les listes de personnes/entreprises
- Privil√©gie "Administratif" pour les budgets, plannings, donn√©es de gestion
- Privil√©gie "Information m√©dicale" pour les donn√©es patients ou statistiques m√©dicales
- Privil√©gie "Fiche Technique Materiel" pour les inventaires d'√©quipements
` : ''}

ATTENTION SP√âCIALE POUR LA CAT√âGORIE "Marketing" :
- N'utilise "Marketing" QUE si le document concerne sp√©cifiquement le marketing du cabinet du Dr Tabibian
- Exemples VALIDES pour "Marketing" : contenu pour le site web du cabinet, publicit√©s pour les r√©seaux sociaux du cabinet, brochures promotionnelles du cabinet
- Exemples INVALIDES pour "Marketing" : brochures commerciales de fournisseurs, publicit√©s de laboratoires, mat√©riel promotionnel d'autres entreprises
- En cas de doute, privil√©gie "Administratif" ou "Information m√©dicale"

IMPORTANT pour les mots-cl√©s :
- Voici les mots-cl√©s d√©j√† utilis√©s dans le syst√®me : ${existingKeywords.join(', ')}
- R√âUTILISE ces mots-cl√©s existants quand ils correspondent au document
- Ne cr√©e de NOUVEAUX mots-cl√©s que si aucun existant ne convient
- √âvite les synonymes (ex: si "chirurgie" existe, n'utilise pas "op√©ration")
- Privil√©gie les termes pr√©cis et m√©dicaux${isExcelFile ? ' ou techniques pour les tableaux' : ''}
- √âvite les termes g√©n√©riques ("document", "fichier", "information"${isExcelFile ? ', "tableau", "donn√©es"' : ''})
- Maximum 4 mots-cl√©s par document
${isExcelFile ? '- Pour Excel : utilise des mots-cl√©s sp√©cifiques au contenu (ex: "planning", "budget", "inventaire", "contacts")' : ''}

Retourne UNIQUEMENT un JSON valide avec cette structure exacte :
{
  "suggestedName": "nom descriptif et professionnel du document (avec pr√©fixe langue si non-fran√ßais)",
  "summary": "r√©sum√© d√©taill√© en 3-4 phrases d√©crivant le contenu principal${isExcelFile ? ' et la structure des donn√©es' : ''} (avec mention de langue si non-fran√ßais)",
  "taxonomy": {
    "category": "UNE DES 6 CAT√âGORIES OBLIGATOIRES CI-DESSUS",
    "subcategory": "sous-cat√©gorie sp√©cifique",
    "keywords": ["mot-cl√©1", "mot-cl√©2", "mot-cl√©3", "mot-cl√©4"],
    "documentType": "type pr√©cis du document${isExcelFile ? ' (ex: tableau Excel, base de donn√©es, planning)' : ''}"
  },
  "detectedLanguage": "langue d√©tect√©e (fran√ßais, anglais, allemand, etc.)"
}`
        },
        {
          role: 'user',
          content: `Analysez ce document en d√©tectant d'abord sa langue principale:

Nom du fichier: ${document.original_name}
Type de fichier: ${document.content_type}${isExcelFile ? ' (Fichier Excel - donn√©es tabulaires)' : ''}

Contenu du document:
${text.substring(0, 4000)}${text.length > 4000 ? '...' : ''}

${isExcelFile ? 'ATTENTION: Ce fichier Excel contient des donn√©es structur√©es en tableau. Analyse le contenu pour d√©terminer s\'il s\'agit de contacts, planning, budget, inventaire, etc.' : ''}

IMPORTANT: D√©tecte d'abord la langue du document et adapte le nom et r√©sum√© en cons√©quence si ce n'est pas du fran√ßais.

Retournez UNIQUEMENT le JSON de l'analyse.`
        }
      ],
      temperature: 0.3,
      max_tokens: 800,
    }),
  });

  if (!response.ok) {
    const errorText = await response.text();
    console.error('OpenAI API error:', errorText);
    throw new Error(`AI analysis failed: ${response.status} ${response.statusText}`);
  }

  const aiData = await response.json();
  const content = aiData.choices[0].message.content.trim();
  
  console.log('OpenAI response content:', content);

  try {
    const jsonMatch = content.match(/\{[\s\S]*\}/);
    const jsonString = jsonMatch ? jsonMatch[0] : content;
    
    const parsed = JSON.parse(jsonString);
    
    if (!parsed.suggestedName || !parsed.summary || !parsed.taxonomy) {
      throw new Error('Invalid AI response structure');
    }
    
    // V√©rifier que la cat√©gorie est valide
    const validCategories = [
      "Administratif", 
      "Marketing", 
      "Contrat", 
      "Information m√©dicale", 
      "Fiche Technique Materiel", 
      "Contact"
    ];
    
    if (!validCategories.includes(parsed.taxonomy.category)) {
      console.warn(`Cat√©gorie invalide d√©tect√©e: ${parsed.taxonomy.category}, utilisation de "Administratif" par d√©faut`);
      parsed.taxonomy.category = "Administratif";
    }
    
    // Log de la langue d√©tect√©e
    if (parsed.detectedLanguage && parsed.detectedLanguage.toLowerCase() !== 'fran√ßais') {
      console.log(`üåê Document en ${parsed.detectedLanguage} d√©tect√©`);
    }
    
    console.log('‚úÖ AI analysis completed successfully');
    return parsed;
  } catch (e) {
    console.error('AI response parsing failed:', e, 'Content:', content);
    throw new Error('AI response parsing failed');
  }
}

async function getExistingKeywords(): Promise<string[]> {
  try {
    // Cette fonction sera appel√©e dans le contexte de l'edge function
    // o√π nous avons acc√®s au client Supabase
    const supabaseUrl = Deno.env.get('SUPABASE_URL')!;
    const supabaseKey = Deno.env.get('SUPABASE_SERVICE_ROLE_KEY')!;
    const { createClient } = await import('https://esm.sh/@supabase/supabase-js@2.49.4');
    const supabase = createClient(supabaseUrl, supabaseKey);
    
    const { data: documents } = await supabase
      .from('uploaded_documents')
      .select('taxonomy')
      .not('taxonomy', 'is', null);

    const keywordsSet = new Set<string>();
    documents?.forEach(doc => {
      if (doc.taxonomy?.keywords) {
        doc.taxonomy.keywords.forEach((keyword: string) => {
          keywordsSet.add(keyword);
        });
      }
    });

    return Array.from(keywordsSet).sort();
  } catch (error) {
    console.error('Error fetching existing keywords:', error);
    return [];
  }
}

export function createFallbackAnalysis(document: any): DocumentAnalysis {
  const isExcelFile = document.content_type === 'application/vnd.ms-excel' || 
                     document.content_type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
  
  return {
    suggestedName: document.original_name.replace(/\.[^/.]+$/, ""),
    summary: `Document ${isExcelFile ? 'Excel ' : ''}trait√© automatiquement - analyse d√©taill√©e non disponible`,
    taxonomy: {
      category: "Administratif",
      subcategory: isExcelFile ? "Donn√©es tabulaires" : "Document g√©n√©ral",
      keywords: [isExcelFile ? "tableau" : "document"],
      documentType: isExcelFile ? "Fichier Excel" : "Fichier upload√©"
    },
    detectedLanguage: "fran√ßais"
  };
}
